map $scheme $hsts_header {
    https   "max-age=31536000;";
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''   '';
}

map $http_x_forwarded_proto $real_scheme {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

map $http_x_forwarded_host $real_host {
  default $http_x_forwarded_host;
  ''      $host;
}

map $http_x_forwarded_port $real_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}

server {
        include /etc/nginx/includes/variables.conf;
        listen 80;

        error_log  /var/log/nginx/error.log  notice;
        access_log  /var/log/nginx/access.json.log  access_json;
        access_log /dev/stdout access_json;

        # redirect to HTTPS behind AWS ALB
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }

        add_header Strict-Transport-Security $hsts_header;

        client_max_body_size 0;
        client_body_buffer_size 20m;
        proxy_buffering off;
        proxy_request_buffering off;

        # proxy_header_host is "Host" header for requesting to proxy_pass
        set $proxy_header_host $host;

        recursive_error_pages on;
        error_page 502 503 504 /maintenance.html;

        location / {
            error_page 502 503 504 = @readonly;
            error_page 404 = @buildkotlinlang;
            include /etc/nginx/includes/proxy_params.conf;
            proxy_pass $main_host;
        }

        location @readonly {
            set $proxy_header_host $readonly_host;
            include /etc/nginx/includes/proxy_params.conf;
            proxy_pass $main_host;
        }

        location @buildkotlinlang {
            include /etc/nginx/includes/proxy_params.conf;
            proxy_pass $buildkotlinlang_host;
        }

        location = /maintenance.html {
            root  /etc/nginx/conf.d;
            expires -1;
            allow all;
        }

        location = /test503 {
          return 503;
        }

        location /health_check {
          return 200 $health_check_content;
        }
}
